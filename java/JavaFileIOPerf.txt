Java File I/O perf V1.04 (2012/06/24 19:28:53): hostName=WDFN00255410A, java.version=1.6.0_26, os.name=Windows 7, os.arch=amd64, power, VirusScanner=on
basedir=C:\Users\d032780\AppData\Local\Temp\JGitTests_1340558933686
speedFactor: Performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, NFTS, Virusscanner turned off
speedFactor: A value of 2.0 means this computer is twice as fast as the mentioned notebook.
Creating new files: #files: 5000, overall time: 3905(ms), time/file: 0,78(ms), speedFactor: 0,86
Detected filesystem timer increases during creation of 5000 files: 2407. Minimal increase of the timer: 1(ms). Average number of files in one timer slot: 2,08
Writing small files: #files: 5000, filesize: 200(bytes), overall time: 18969(ms), time/file: 3,79(ms), throughput: 0,05(Mbyte/s), speedFactor: 0,11
Detected filesystem timer increases during update of 5000 files: 4999. Minimal increase of the timer: 2(ms). Average number of files in one timer slot: 1,00
Reading small files: #files: 50000, filesize: 200(bytes), overall time: 7069(ms), time/file: 0,14(ms), throughput: 1,35(Mbyte/s), speedFactor: 1,02
Writing big files: #files: 2, filesize: 50000000(bytes), overall time: 10750(ms), time/file: 5375,00(ms), throughput: 8,87(Mbyte/s), speedFactor: 0,89
Reading big files: #files: 20, filesize: 50000000(bytes), overall time: 1178(ms), time/file: 58,90(ms), throughput: 809,57(Mbyte/s), speedFactor: 1,07
Listing files in a hierachy: #files: 50000, overall time: 4073(ms), time/file: 0,08(ms), speedFactor: 1,00
Reading modification times: #files: 50000, overall time: 2580(ms), time/file: 0,05(ms), speedFactor: 1,00
Deleting files: #files: 5000, overall time: 3614(ms), time/file: 0,72(ms), speedFactor: 0,93
Checksum: 67027947479420300
Sum of all measurements: 52138(ms), speedfactor: 1,50
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 5892(ms), time/file: 11,78(ms), speedFactor: 0,50

Java File I/O perf V1.04 (2012/06/24 19:31:56): hostName=WDFN00255410A, java.version=1.6.0_26, os.name=Windows 7, os.arch=amd64, power, VirusScanner=off
basedir=C:\Users\d032780\AppData\Local\Temp\JGitTests_1340559116305
speedFactor: Performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, NFTS, Virusscanner turned off
speedFactor: A value of 2.0 means this computer is twice as fast as the mentioned notebook.
Creating new files: #files: 5000, overall time: 4008(ms), time/file: 0,80(ms), speedFactor: 0,84
Detected filesystem timer increases during creation of 5000 files: 2112. Minimal increase of the timer: 1(ms). Average number of files in one timer slot: 2,37
Writing small files: #files: 5000, filesize: 200(bytes), overall time: 1807(ms), time/file: 0,36(ms), throughput: 0,53(Mbyte/s), speedFactor: 1,16
Detected filesystem timer increases during update of 5000 files: 1672. Minimal increase of the timer: 1(ms). Average number of files in one timer slot: 2,99
Reading small files: #files: 50000, filesize: 200(bytes), overall time: 6741(ms), time/file: 0,13(ms), throughput: 1,41(Mbyte/s), speedFactor: 1,07
Writing big files: #files: 2, filesize: 50000000(bytes), overall time: 9280(ms), time/file: 4640,00(ms), throughput: 10,28(Mbyte/s), speedFactor: 1,03
Reading big files: #files: 20, filesize: 50000000(bytes), overall time: 1274(ms), time/file: 63,70(ms), throughput: 748,57(Mbyte/s), speedFactor: 0,99
Listing files in a hierachy: #files: 50000, overall time: 3886(ms), time/file: 0,08(ms), speedFactor: 1,05
Reading modification times: #files: 50000, overall time: 2412(ms), time/file: 0,05(ms), speedFactor: 1,07
Deleting files: #files: 5000, overall time: 3099(ms), time/file: 0,62(ms), speedFactor: 1,09
Checksum: 67027956139995880
Sum of all measurements: 32507(ms), speedfactor: 0,94
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 2467(ms), time/file: 4,93(ms), speedFactor: 1,20

Java File I/O perf V1.04 (2012/06/24 19:36:52): hostName=vboxLubuntu120464, java.version=1.6.0_24, os.name=Linux, os.arch=amd64, virtualbox on WDFN00255410A, virus=off
basedir=/tmp/JGitTests_1340559412945
speedFactor: Performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, NFTS, Virusscanner turned off
speedFactor: A value of 2.0 means this computer is twice as fast as the mentioned notebook.
Creating new files: #files: 5000, overall time: 129(ms), time/file: 0.03(ms), speedFactor: 26.07
Detected filesystem timer increases during creation of 5000 files: 0. Minimal increase of the timer: 9223372036854775807(ms). Average number of files in one timer slot: -0.00
Writing small files: #files: 5000, filesize: 200(bytes), overall time: 140(ms), time/file: 0.03(ms), throughput: 6.81(Mbyte/s), speedFactor: 15.01
Detected filesystem timer increases during update of 5000 files: 0. Minimal increase of the timer: 9223372036854775807(ms). Average number of files in one timer slot: -0.00
Reading small files: #files: 50000, filesize: 200(bytes), overall time: 546(ms), time/file: 0.01(ms), throughput: 17.47(Mbyte/s), speedFactor: 13.16
Writing big files: #files: 2, filesize: 50000000(bytes), overall time: 22160(ms), time/file: 11080.00(ms), throughput: 4.30(Mbyte/s), speedFactor: 0.43
Reading big files: #files: 20, filesize: 50000000(bytes), overall time: 1139(ms), time/file: 56.95(ms), throughput: 837.29(Mbyte/s), speedFactor: 1.11
Listing files in a hierachy: #files: 50000, overall time: 2017(ms), time/file: 0.04(ms), speedFactor: 2.02
Reading modification times: #files: 50000, overall time: 169(ms), time/file: 0.00(ms), speedFactor: 15.26
Deleting files: #files: 5000, overall time: 125(ms), time/file: 0.03(ms), speedFactor: 26.98
Checksum: 67027970650740220
Sum of all measurements: 26425(ms), speedfactor: 0.76
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 520(ms), time/file: 1.04(ms), speedFactor: 5.68

Java File I/O perf V2.01 (2012/06/25 23:41:00): hostName=WDFN00255410A, java.version=1.6.0_33, os.name=Windows 7, os.arch=amd64
basedir=C:\Users\d032780\AppData\Local\Temp\JGitTests_1340660460084
score: Performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off
score: A value of 2.0 means this computer is twice as fast as the mentioned notebook.
Creating new files: #files: 10000, overall time: 6302(ms), time/file: 0,63(ms), score: 1,16
Detected filesystem timer increases during creation of 10000 files: 329. Minimal increase of the timer: 15(ms). Average number of files in one timer slot: 30,38
Writing small files: #files: 10000, filesize: 200(bytes), overall time: 3915(ms), time/file: 0,39(ms), throughput: 0,49(Mbyte/s), score: 1,23
Detected filesystem timer increases during update of 10000 files: 243. Minimal increase of the timer: 15(ms). Average number of files in one timer slot: 41,13
Reading small files: #files: 14362, filesize: 200(bytes), overall time: 2012(ms), time/file: 0,14(ms), throughput: 1,36(Mbyte/s), score: 1,00
Writing big files: #files: 10, filesize: 50000000(bytes), overall time: 5272(ms), time/file: 527,20(ms), throughput: 90,45(Mbyte/s), score: 1,04
Reading big files: #files: 32, filesize: 50000000(bytes), overall time: 2028(ms), time/file: 63,38(ms), throughput: 752,41(Mbyte/s), score: 0,91
Listing files in a hierachy: #files: 26703, overall time: 2777(ms), time/file: 0,10(ms), score: 1,15
Reading modification times: #files: 33727, overall time: 4665(ms), time/file: 0,14(ms), score: 0,94
Deleting files: #files: 5726, overall time: 8175(ms), time/file: 1,43(ms), score: 1,65
Average score: 1,14(ms), chksum:60112535060622843
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 2839(ms), time/file: 5,68(ms), score: 1,06

Java File I/O perf V2.03, date:2012/06/26 08:31:32, hostName=WDFN00255410A, java.version=1.6.0_33, os.name=Windows 7, os.arch=amd64, virus=ON, non-battery
basedir=C:\Users\d032780\AppData\Local\Temp\JGitTests_1340692292799
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 1956, overall time: 2365(ms), time/file: 1,21(ms), score: 0,60
Detected filesystem timer increases during creation of 1956 files: 1088. Minimal increase of the timer: 1(ms). Average number of files in one timer slot: 1,80
Writing small files: #files: 1000, filesize: 200(bytes), overall time: 3984(ms), time/file: 3,98(ms), throughput: 0,05(Mbyte/s), score: 0,12
Detected filesystem timer increases during update of 1000 files: 999. Minimal increase of the timer: 3(ms). Average number of files in one timer slot: 1,00
Reading small files: #files: 13309, filesize: 200(bytes), overall time: 2068(ms), time/file: 0,16(ms), throughput: 1,23(Mbyte/s), score: 0,90
Writing big files: #files: 2, filesize: 50000000(bytes), overall time: 7778(ms), time/file: 3889,00(ms), throughput: 12,26(Mbyte/s), score: 0,14
Reading big files: #files: 30, filesize: 50000000(bytes), overall time: 2090(ms), time/file: 69,67(ms), throughput: 684,46(Mbyte/s), score: 0,83
Listing files in a hierachy: #files: 10000, overall time: 3250(ms), time/file: 0,33(ms), score: 0,37
Reading modification times: #files: 10000, overall time: 2990(ms), time/file: 0,30(ms), score: 0,43
Deleting files: #files: 2555, overall time: 2031(ms), time/file: 0,79(ms), score: 2,97
Average score: 0,80(ms), chksum:14896432544278682
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 11028(ms), time/file: 22,06(ms), score: 0,27
Cleaning up: please be patient ...
Finished. Goodbye!

Java File I/O perf V2.05, date:2012/06/26 10:22:16, hostName=WDFN00255410A, java.version=1.6.0_33, os.name=Windows 7, os.arch=amd64, VIRUSSCAN=ON
basedir=C:\Users\d032780\AppData\Local\Temp\JGitTests_1340698936202
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 10000, overall time: 6298(ms), time/file: 0,63(ms), score: 1,16
Detected filesystem timer increases during creation of 10000 files: 4561. Minimal increase of the timer: 1(ms). Average number of files in one timer slot: 2,19
Writing small files: #files: 1000, filesize: 200(bytes), overall time: 3371(ms), time/file: 3,37(ms), throughput: 0,06(Mbyte/s), score: 0,14
Detected filesystem timer increases during update of 1000 files: 999. Minimal increase of the timer: 2(ms). Average number of files in one timer slot: 1,00
Reading small files: #files: 19493, filesize: 200(bytes), overall time: 2815(ms), time/file: 0,14(ms), throughput: 1,32(Mbyte/s), score: 0,97
Writing big files: #files: 10, filesize: 50000000(bytes), overall time: 5150(ms), time/file: 515,00(ms), throughput: 92,59(Mbyte/s), score: 1,07
Reading big files: #files: 38, filesize: 50000000(bytes), overall time: 3638(ms), time/file: 95,74(ms), throughput: 498,07(Mbyte/s), score: 0,60
Listing files in a hierachy: #files: 20107, overall time: 2885(ms), time/file: 0,14(ms), score: 0,84
Reading modification times: #files: 21660, overall time: 2979(ms), time/file: 0,14(ms), score: 0,95
Deleting files: #files: 4304, overall time: 5417(ms), time/file: 1,26(ms), score: 1,88
Average score: 0,95(ms), chksum:43936045363715323
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 9177(ms), time/file: 18,35(ms), score: 0,33
Cleaning up: please be patient ...
Finished. Goodbye!

Java File I/O perf V2.05, date:2012/06/26 10:27:16, hostName=vboxLubuntu120464, java.version=1.6.0_24, os.name=Linux, os.arch=amd64, VIRUSSCAN_ON_VBOX_HOST=ON
basedir=/tmp/JGitTests_1340699236058
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 158227, overall time: 4475(ms), time/file: 0.03(ms), score: 25.81
Detected filesystem timer increases during creation of 158227 files: 5. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 37220.25
Writing small files: #files: 100000, filesize: 200(bytes), overall time: 4631(ms), time/file: 0.05(ms), throughput: 4.12(Mbyte/s), score: 10.36
Detected filesystem timer increases during update of 100000 files: 4. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 19815.33
Reading small files: #files: 200000, filesize: 200(bytes), overall time: 3594(ms), time/file: 0.02(ms), throughput: 10.61(Mbyte/s), score: 7.79
Writing big files: #files: 10, filesize: 50000000(bytes), overall time: 15971(ms), time/file: 1597.10(ms), throughput: 29.86(Mbyte/s), score: 0.34
Reading big files: #files: 49, filesize: 50000000(bytes), overall time: 2505(ms), time/file: 51.12(ms), throughput: -702.39(Mbyte/s), score: 1.13
Listing files in a hierachy: #files: 200000, overall time: 970(ms), time/file: 0.00(ms), score: 24.74
Reading modification times: #files: 200000, overall time: 691(ms), time/file: 0.00(ms), score: 37.63
Deleting files: #files: 100000, overall time: 3340(ms), time/file: 0.03(ms), score: 70.66
Average score: 22.31(ms), chksum:417106282647528000
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 496(ms), time/file: 0.99(ms), score: 6.07
Cleaning up: please be patient ...
Finished. Goodbye!

Java File I/O perf V2.05, date:2012/06/26 10:34:30, hostName=vboxLubuntu120464, java.version=1.6.0_24, os.name=Linux, os.arch=amd64, VIRUSSCAN_ON_VBOX_HOST=OFF
basedir=/tmp/JGitTests_1340699670913
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 174825, overall time: 4972(ms), time/file: 0.03(ms), score: 25.67
Detected filesystem timer increases during creation of 174825 files: 5. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 37323.50
Writing small files: #files: 100000, filesize: 200(bytes), overall time: 4151(ms), time/file: 0.04(ms), throughput: 4.59(Mbyte/s), score: 11.56
Detected filesystem timer increases during update of 100000 files: 4. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 27777.33
Reading small files: #files: 200000, filesize: 200(bytes), overall time: 3177(ms), time/file: 0.02(ms), throughput: 12.01(Mbyte/s), score: 8.81
Writing big files: #files: 10, filesize: 50000000(bytes), overall time: 9753(ms), time/file: 975.30(ms), throughput: 48.89(Mbyte/s), score: 0.56
Reading big files: #files: 54, filesize: 50000000(bytes), overall time: 2817(ms), time/file: 52.17(ms), throughput: -539.96(Mbyte/s), score: 1.11
Listing files in a hierachy: #files: 200000, overall time: 880(ms), time/file: 0.00(ms), score: 27.27
Reading modification times: #files: 200000, overall time: 754(ms), time/file: 0.00(ms), score: 34.48
Deleting files: #files: 200000, overall time: 1866(ms), time/file: 0.01(ms), score: 252.95
Average score: 45.30(ms), chksum:417106417842708000
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 528(ms), time/file: 1.06(ms), score: 5.70
Cleaning up: please be patient ...
Finished. Goodbye!

Java File I/O perf V2.06, date:2012/06/26 11:00:37, hostName=WDFN00255410A, java.version=1.6.0_33, os.name=Windows 7, os.arch=amd64, VIRUSSCANNER=OFF
basedir=C:\Users\d032780\AppData\Local\Temp\JGitTests_1340701237191
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 10000, overall time: 8269(ms), time/file: 0,83(ms), score: 0,88
Detected filesystem timer increases during creation of 10000 files: 3864. Minimal increase of the timer: 1(ms). Average number of files in one timer slot: 2,59
Writing small files: #files: 10000, filesize: 200(bytes), overall time: 4929(ms), time/file: 0,49(ms), throughput: 0,39(Mbyte/s), score: 0,97
Detected filesystem timer increases during update of 10000 files: 3741. Minimal increase of the timer: 1(ms). Average number of files in one timer slot: 2,67
Reading small files: #files: 18999, filesize: 200(bytes), overall time: 2801(ms), time/file: 0,15(ms), throughput: 1,29(Mbyte/s), score: 0,95
Writing big files: #files: 10, filesize: 50000000(bytes), overall time: 4937(ms), time/file: 493,70(ms), throughput: 96,58(Mbyte/s), score: 1,12
Reading big files: #files: 41, filesize: 50000000(bytes), overall time: 2767(ms), time/file: 67,49(ms), throughput: 706,55(Mbyte/s), score: 0,86
Listing files in a hierachy: #files: 35928, overall time: 4296(ms), time/file: 0,12(ms), score: 1,00
Reading modification times: #files: 51903, overall time: 7063(ms), time/file: 0,14(ms), score: 0,96
Deleting files: #files: 4823, overall time: 8990(ms), time/file: 1,86(ms), score: 1,27
Average score: 1,00(ms), chksum:84482950298483858
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 2972(ms), time/file: 5,94(ms), score: 1,01
Cleaning up: please be patient ...
Finished. Goodbye!

Java File I/O perf V2.07, date:2012/06/26 11:19:12, hostName=vboxLubuntu120464, java.version=1.6.0_24, os.name=Linux, os.arch=amd64, VIRUSSCAN_HOST=OFF
basedir=/tmp/JGitTests_1340702352431
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 139534, overall time: 3130(ms), time/file: 0.02(ms), score: 32.54
Detected filesystem timer increases during creation of 139534 files: 3. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 39574.50
Writing small files: #files: 94240, filesize: 200(bytes), overall time: 4921(ms), time/file: 0.05(ms), throughput: 3.65(Mbyte/s), score: 9.19
Detected filesystem timer increases during update of 94240 files: 5. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 21458.50
Reading small files: #files: 200000, filesize: 200(bytes), overall time: 1722(ms), time/file: 0.01(ms), throughput: 22.15(Mbyte/s), score: 16.26
Writing big files: #files: 3, filesize: 50000000(bytes), overall time: 2687(ms), time/file: 895.67(ms), throughput: 53.24(Mbyte/s), score: 0.61
Reading big files: #files: 52, filesize: 50000000(bytes), overall time: 2587(ms), time/file: 49.75(ms), throughput: 958.47(Mbyte/s), score: 1.16
Listing files in a hierachy: #files: 200000, overall time: 860(ms), time/file: 0.00(ms), score: 27.91
Reading modification times: #files: 200000, overall time: 599(ms), time/file: 0.00(ms), score: 43.41
Deleting files: #files: 112219, overall time: 2800(ms), time/file: 0.02(ms), score: 94.58
Average score: 28.21(ms), chksum:312830104347326000
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 568(ms), time/file: 1.14(ms), score: 5.30
Cleaning up: please be patient ...
Finished. Goodbye!

Java File I/O perf V2.07, date:2012/06/26 12:41:24, hostName=WDFN00288735A, java.version=1.6.0_26, os.name=Windows 7, os.arch=amd64, Jan Sievers, Virusscanner=ON
basedir=C:\Users\d037913\AppData\Local\Temp\JGitTests_1340707284487
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 7182, overall time: 5348(ms), time/file: 0,74(ms), score: 0,98
Detected filesystem timer increases during creation of 7182 files: 3038. Minimal increase of the timer: 1(ms). Average number of files in one timer slot: 2,36
Writing small files: #files: 1380, filesize: 200(bytes), overall time: 2987(ms), time/file: 2,16(ms), throughput: 0,09(Mbyte/s), score: 0,22
Detected filesystem timer increases during update of 1380 files: 1141. Minimal increase of the timer: 1(ms). Average number of files in one timer slot: 1,21
Reading small files: #files: 30000, filesize: 200(bytes), overall time: 3177(ms), time/file: 0,11(ms), throughput: 1,80(Mbyte/s), score: 1,32
Writing big files: #files: 10, filesize: 50000000(bytes), overall time: 3161(ms), time/file: 316,10(ms), throughput: 150,85(Mbyte/s), score: 1,74
Reading big files: #files: 70, filesize: 50000000(bytes), overall time: 2735(ms), time/file: 39,07(ms), throughput: 1220,42(Mbyte/s), score: 1,48
Listing files in a hierachy: #files: 42654, overall time: 2963(ms), time/file: 0,07(ms), score: 1,73
Reading modification times: #files: 44532, overall time: 2998(ms), time/file: 0,07(ms), score: 1,93
Deleting files: #files: 9695, overall time: 4464(ms), time/file: 0,46(ms), score: 5,13
Average score: 1,82(ms), chksum:104394174620506439
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 3708(ms), time/file: 7,42(ms), score: 0,81
Cleaning up: please be patient ...
Finished. Goodbye!

Java File I/O perf V2.07, date:2012/06/26 15:44:10, hostName=wdfm00302019a.dhcp.wdf.sap.corp, java.version=1.6.0_33, os.name=Mac OS X, os.arch=x86_64, Sascha, Virusscanner=ON
basedir=/var/folders/m_/n50pzcp55gx22n65758_9dtmj_mm2v/T/JGitTests_1340718250311
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 17013, overall time: 5554(ms), time/file: 0.33(ms), score: 2.24
Detected filesystem timer increases during creation of 17013 files: 5. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 2821.50
Writing small files: #files: 1028, filesize: 200(bytes), overall time: 3086(ms), time/file: 3.00(ms), throughput: 0.06(Mbyte/s), score: 0.16
Detected filesystem timer increases during update of 1028 files: 3. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 332.00
Reading small files: #files: 131964, filesize: 200(bytes), overall time: 2683(ms), time/file: 0.02(ms), throughput: 9.38(Mbyte/s), score: 6.89
Writing big files: #files: 12, filesize: 50000000(bytes), overall time: 3090(ms), time/file: 257.50(ms), throughput: 185.18(Mbyte/s), score: 2.14
Reading big files: #files: 150, filesize: 50000000(bytes), overall time: 4743(ms), time/file: 31.62(ms), throughput: 1508.02(Mbyte/s), score: 1.83
Listing files in a hierachy: #files: 200000, overall time: 5919(ms), time/file: 0.03(ms), score: 4.05
Reading modification times: #files: 200000, overall time: 3163(ms), time/file: 0.02(ms), score: 8.22
Deleting files: #files: 23563, overall time: 4562(ms), time/file: 0.19(ms), score: 12.19
Average score: 4.71(ms), chksum:312833825628886000
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 2862(ms), time/file: 5.72(ms), score: 1.05
Cleaning up: please be patient ...
Finished. Goodbye!

Java File I/O perf V2.07, date:2012/06/26 15:50:19, hostName=wdfm00302019a.dhcp.wdf.sap.corp, java.version=1.6.0_33, os.name=Mac OS X, os.arch=x86_64, Sascha, Virusscanner=OFF
basedir=/var/folders/m_/n50pzcp55gx22n65758_9dtmj_mm2v/T/JGitTests_1340718619981
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 30000, overall time: 10951(ms), time/file: 0.37(ms), score: 2.00
Detected filesystem timer increases during creation of 30000 files: 11. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 2575.00
Writing small files: #files: 6923, filesize: 200(bytes), overall time: 2989(ms), time/file: 0.43(ms), throughput: 0.44(Mbyte/s), score: 1.11
Detected filesystem timer increases during update of 6923 files: 3. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 2337.00
Reading small files: #files: 134529, filesize: 200(bytes), overall time: 2906(ms), time/file: 0.02(ms), throughput: 8.83(Mbyte/s), score: 6.48
Writing big files: #files: 11, filesize: 50000000(bytes), overall time: 2922(ms), time/file: 265.64(ms), throughput: 179.51(Mbyte/s), score: 2.07
Reading big files: #files: 94, filesize: 50000000(bytes), overall time: 2973(ms), time/file: 31.63(ms), throughput: 1507.66(Mbyte/s), score: 1.83
Listing files in a hierachy: #files: 200000, overall time: 4298(ms), time/file: 0.02(ms), score: 5.58
Reading modification times: #files: 200000, overall time: 2927(ms), time/file: 0.01(ms), score: 8.88
Deleting files: #files: 25214, overall time: 5432(ms), time/file: 0.22(ms), score: 10.95
Average score: 4.86(ms), chksum:312833909492550000
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 650(ms), time/file: 1.30(ms), score: 4.63
Cleaning up: please be patient ...
Finished. Goodbye!

Java File I/O perf V2.07, date:2012/06/26 16:48:46, hostName=WDFN00255421A, java.version=1.6.0_20, os.name=Windows 7, os.arch=x86, Matthias Sohn, Windows 7 64 bit, 4 cores i5 2.53 GHz, 8 GB RAM, standard hard disc, Virusscanner=ON
basedir=C:\Users\d029788\AppData\Local\Temp\JGitTests_1340722124858
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 5297, overall time: 5397(ms), time/file: 1,02(ms), score: 0,72
Detected filesystem timer increases during creation of 5297 files: 2179. Minimal increase of the timer: 1(ms). Average number of files in one timer slot: 2,43
Writing small files: #files: 581, filesize: 200(bytes), overall time: 2743(ms), time/file: 4,72(ms), throughput: 0,04(Mbyte/s), score: 0,10
Detected filesystem timer increases during update of 581 files: 417. Minimal increase of the timer: 1(ms). Average number of files in one timer slot: 1,39
Reading small files: #files: 30000, filesize: 200(bytes), overall time: 4228(ms), time/file: 0,14(ms), throughput: 1,35(Mbyte/s), score: 0,99
Writing big files: #files: 3, filesize: 50000000(bytes), overall time: 3834(ms), time/file: 1278,00(ms), throughput: 37,31(Mbyte/s), score: 0,43
Reading big files: #files: 41, filesize: 50000000(bytes), overall time: 2532(ms), time/file: 61,76(ms), throughput: 772,13(Mbyte/s), score: 0,94
Listing files in a hierachy: #files: 30000, overall time: 5080(ms), time/file: 0,17(ms), score: 0,71
Reading modification times: #files: 30000, overall time: 4411(ms), time/file: 0,15(ms), score: 0,88
Deleting files: #files: 3000, overall time: 3339(ms), time/file: 1,11(ms), score: 2,12
Average score: 0,86(ms), chksum:44690291889305920
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 8719(ms), time/file: 17,44(ms), score: 0,35
Cleaning up: please be patient ...
Finished. Goodbye!

Java File I/O perf V2.07, date:2012/06/26 16:54:03, hostName=WDFN00255421A, java.version=1.6.0_20, os.name=Windows 7, os.arch=x86 Matthias Sohn, Windows 7 64 bit, 4 cores i5 2.53 GHz, 8 GB RAM, standard hard disc, Virusscanner=OFF
basedir=C:\Users\d029788\AppData\Local\Temp\JGitTests_1340722443792
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 9836, overall time: 6398(ms), time/file: 0,65(ms), score: 1,12
Detected filesystem timer increases during creation of 9836 files: 2757. Minimal increase of the timer: 1(ms). Average number of files in one timer slot: 3,57
Writing small files: #files: 9202, filesize: 200(bytes), overall time: 5315(ms), time/file: 0,58(ms), throughput: 0,33(Mbyte/s), score: 0,83
Detected filesystem timer increases during update of 9202 files: 2796. Minimal increase of the timer: 1(ms). Average number of files in one timer slot: 3,29
Reading small files: #files: 30000, filesize: 200(bytes), overall time: 3992(ms), time/file: 0,13(ms), throughput: 1,43(Mbyte/s), score: 1,05
Writing big files: #files: 3, filesize: 50000000(bytes), overall time: 2357(ms), time/file: 785,67(ms), throughput: 60,69(Mbyte/s), score: 0,70
Reading big files: #files: 37, filesize: 50000000(bytes), overall time: 2589(ms), time/file: 69,97(ms), throughput: 681,46(Mbyte/s), score: 0,83
Listing files in a hierachy: #files: 30000, overall time: 3421(ms), time/file: 0,11(ms), score: 1,05
Reading modification times: #files: 30000, overall time: 3429(ms), time/file: 0,11(ms), score: 1,14
Deleting files: #files: 3000, overall time: 3397(ms), time/file: 1,13(ms), score: 2,08
Average score: 1,10(ms), chksum:44690302197010210
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 2655(ms), time/file: 5,31(ms), score: 1,13
Cleaning up: please be patient ...
Finished. Goodbye!

Java File I/O perf V2.07, date:2012/06/27 13:10:56, hostName=wdfm00293805a.dhcp.wdf.sap.corp, java.version=1.6.0_33, os.name=Mac OS X, os.arch=x86_64, Jens, Virusscanner=ON
basedir=/var/folders/bZ/bZ6Q4vbwEAOiFM2PS9WSZFtG5-g/-Tmp-/JGitTests_1340795456814
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 30000, overall time: 13985(ms), time/file: 0.47(ms), score: 1.57
Detected filesystem timer increases during creation of 30000 files: 14. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 2063.69
Writing small files: #files: 924, filesize: 200(bytes), overall time: 3090(ms), time/file: 3.34(ms), throughput: 0.06(Mbyte/s), score: 0.14
Detected filesystem timer increases during update of 924 files: 3. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 285.50
Reading small files: #files: 128388, filesize: 200(bytes), overall time: 2810(ms), time/file: 0.02(ms), throughput: 8.71(Mbyte/s), score: 6.40
Writing big files: #files: 10, filesize: 50000000(bytes), overall time: 2751(ms), time/file: 275.10(ms), throughput: 173.33(Mbyte/s), score: 2.00
Reading big files: #files: 99, filesize: 50000000(bytes), overall time: 3177(ms), time/file: 32.09(ms), throughput: 1485.89(Mbyte/s), score: 1.80
Listing files in a hierachy: #files: 200000, overall time: 4257(ms), time/file: 0.02(ms), score: 5.64
Reading modification times: #files: 200000, overall time: 2834(ms), time/file: 0.01(ms), score: 9.17
Deleting files: #files: 25711, overall time: 6964(ms), time/file: 0.27(ms), score: 8.71
Average score: 4.43(ms), chksum:312851840475677000
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 2852(ms), time/file: 5.70(ms), score: 1.06
Cleaning up: please be patient ...
Finished. Goodbye!

Java File I/O perf V2.07, date:2012/06/27 13:21:56, hostName=wdfm00293805a.dhcp.wdf.sap.corp, java.version=1.6.0_33, os.name=Mac OS X, os.arch=x86_64, Jens, Virusscanner=OFF
basedir=/var/folders/bZ/bZ6Q4vbwEAOiFM2PS9WSZFtG5-g/-Tmp-/JGitTests_1340796116493
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NFTS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 30000, overall time: 14012(ms), time/file: 0.47(ms), score: 1.56
Detected filesystem timer increases during creation of 30000 files: 14. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 2012.92
Writing small files: #files: 5002, filesize: 200(bytes), overall time: 2977(ms), time/file: 0.60(ms), throughput: 0.32(Mbyte/s), score: 0.81
Detected filesystem timer increases during update of 5002 files: 3. Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 1692.00
Reading small files: #files: 131964, filesize: 200(bytes), overall time: 2841(ms), time/file: 0.02(ms), throughput: 8.86(Mbyte/s), score: 6.50
Writing big files: #files: 8, filesize: 50000000(bytes), overall time: 2538(ms), time/file: 317.25(ms), throughput: 150.30(Mbyte/s), score: 1.74
Reading big files: #files: 96, filesize: 50000000(bytes), overall time: 2966(ms), time/file: 30.90(ms), throughput: 1543.37(Mbyte/s), score: 1.87
Listing files in a hierachy: #files: 200000, overall time: 4020(ms), time/file: 0.02(ms), score: 5.97
Reading modification times: #files: 200000, overall time: 2965(ms), time/file: 0.01(ms), score: 8.77
Deleting files: #files: 25863, overall time: 6888(ms), time/file: 0.27(ms), score: 8.86
Average score: 4.51(ms), chksum:312851994739430000
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 639(ms), time/file: 1.28(ms), score: 4.71
Cleaning up: please be patient ...
Finished. Goodbye!

Java File I/O perf V2.09, date:2012/07/01 18:38:08, hostName=chris-lubuntu-home, java.version=1.6.0_24, os.name=Linux, os.arch=amd64, user.name=chris
basedir=/tmp/JGitTests_1341160688202
score: performance compared to Windows7(64bit) Notebook with QuadCore I5, 8 GB Ram, standard NTFS disk, Virusscanner turned off.
       Higher scores mean better performance.
Creating new files: #files: 95796, overall time: 3973(ms), time/file: 0.04(ms), score: 17.60
Detected filesystem timer increases during creation of 95796 files: 4.
Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 22769.00
Writing small files: #files: 79016, filesize: 200(bytes), overall time: 4211(ms), time/file: 0.05(ms), throughput: 3.58(Mbyte/s), score: 9.01
Detected filesystem timer increases during update of 79016 files: 4.
Minimal increase of the timer: 1000(ms). Average number of files in one timer slot: 19435.67
Reading small files: #files: 200000, filesize: 200(bytes), overall time: 3027(ms), time/file: 0.02(ms), throughput: 12.60(Mbyte/s), score: 9.25
Writing big files: #files: 5, filesize: 50000000(bytes), overall time: 2732(ms), time/file: 546.40(ms), throughput: 87.27(Mbyte/s), score: 1.01
Reading big files: #files: 18, filesize: 50000000(bytes), overall time: 2945(ms), time/file: 163.61(ms), throughput: 291.45(Mbyte/s), score: 0.35
Listing files in a hierachy: #files: 200000, overall time: 1734(ms), time/file: 0.01(ms), score: 13.84 
Reading modification times: #files: 200000, overall time: 1099(ms), time/file: 0.01(ms), score: 23.66
Deleting files: #files: 200000, overall time: 3309(ms), time/file: 0.02(ms), score: 142.64
Average score: 27.17, chksum:312937048778649000
Additional tests which don't go into sum:
modify file and add it with jgit: #files: 500, overall time: 723(ms), time/file: 1.45(ms), score: 4.16
Cleaning up: please be patient ...
Finished. Goodbye!
